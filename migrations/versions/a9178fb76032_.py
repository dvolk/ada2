"""empty message

Revision ID: a9178fb76032
Revises: 
Create Date: 2023-05-22 14:53:28.990153

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a9178fb76032'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('data_source',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('source_username', sa.String(length=64), nullable=False),
    sa.Column('source_host', sa.String(length=256), nullable=False),
    sa.Column('source_port', sa.Integer(), nullable=False),
    sa.Column('source_dir', sa.String(length=256), nullable=False),
    sa.Column('data_size', sa.Integer(), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('data_source', schema=None) as batch_op:
        batch_op.create_index('source_host_source_dir_idx', ['source_host', 'source_dir'], unique=False)

    op.create_table('group',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('machine_provider',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('customer', sa.String(length=100), nullable=False),
    sa.Column('provider_data', sa.JSON(), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('machine_template',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('type', sa.String(length=100), nullable=False),
    sa.Column('image', sa.String(length=200), nullable=False),
    sa.Column('os_username', sa.String(length=100), nullable=False),
    sa.Column('description', sa.String(length=200), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.Column('memory_limit_gb', sa.Integer(), nullable=True),
    sa.Column('cpu_limit_cores', sa.Integer(), nullable=True),
    sa.Column('disk_size_gb', sa.Integer(), nullable=True),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.Column('machine_provider_id', sa.Integer(), nullable=True),
    sa.Column('extra_data', sa.JSON(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.ForeignKeyConstraint(['machine_provider_id'], ['machine_provider.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('sesh_id', sa.String(length=2), nullable=False),
    sa.Column('is_enabled', sa.Boolean(), nullable=False),
    sa.Column('is_admin', sa.Boolean(), nullable=False),
    sa.Column('username', sa.String(length=100), nullable=False),
    sa.Column('password_hash', sa.String(length=200), nullable=True),
    sa.Column('given_name', sa.String(length=100), nullable=True),
    sa.Column('family_name', sa.String(length=100), nullable=True),
    sa.Column('organization', sa.String(length=200), nullable=True),
    sa.Column('job_title', sa.String(length=200), nullable=True),
    sa.Column('email', sa.String(length=200), nullable=False),
    sa.Column('language', sa.String(length=5), nullable=False),
    sa.Column('timezone', sa.String(length=50), nullable=False),
    sa.Column('provider', sa.String(length=64), nullable=True),
    sa.Column('provider_id', sa.String(length=64), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.Column('group_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['group_id'], ['group.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('username')
    )
    op.create_table('machine',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('display_name', sa.String(length=100), nullable=False),
    sa.Column('ip', sa.String(length=45), nullable=True),
    sa.Column('hostname', sa.String(length=200), nullable=True),
    sa.Column('share_token', sa.String(length=16), nullable=False),
    sa.Column('access_token', sa.String(length=16), nullable=False),
    sa.Column('state', sa.Enum('PROVISIONING', 'READY', 'FAILED', 'DELETING', 'DELETED', name='machinestate'), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.Column('owner_id', sa.Integer(), nullable=True),
    sa.Column('machine_template_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['machine_template_id'], ['machine_template.id'], ),
    sa.ForeignKeyConstraint(['owner_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('machine', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_machine_state'), ['state'], unique=False)

    op.create_table('user_data_source',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('data_source_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_source.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('data_transfer_job',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('state', sa.Enum('RUNNING', 'DONE', 'FAILED', 'HIDDEN', name='datatransferjobstate'), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('data_source_id', sa.Integer(), nullable=True),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.ForeignKeyConstraint(['data_source_id'], ['data_source.id'], ),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('data_transfer_job', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_data_transfer_job_state'), ['state'], unique=False)

    op.create_table('shared_user_machine',
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], )
    )
    op.create_table('audit',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('remote_ip', sa.String(length=16), nullable=True),
    sa.Column('sesh_id', sa.String(length=2), nullable=True),
    sa.Column('action', sa.String(length=128), nullable=True),
    sa.Column('state', sa.String(length=128), nullable=True),
    sa.Column('creation_date', sa.DateTime(), nullable=True),
    sa.Column('finished_date', sa.DateTime(), nullable=True),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('data_transfer_job_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['data_transfer_job_id'], ['data_transfer_job.id'], ),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('audit', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_audit_machine_id'), ['machine_id'], unique=False)
        batch_op.create_index(batch_op.f('ix_audit_user_id'), ['user_id'], unique=False)

    op.create_table('problem_report',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=False),
    sa.Column('creation_date', sa.DateTime(), nullable=False),
    sa.Column('is_hidden', sa.Boolean(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=True),
    sa.Column('machine_id', sa.Integer(), nullable=True),
    sa.Column('data_transfer_job_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['data_transfer_job_id'], ['data_transfer_job.id'], ),
    sa.ForeignKeyConstraint(['machine_id'], ['machine.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('problem_report')
    with op.batch_alter_table('audit', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_audit_user_id'))
        batch_op.drop_index(batch_op.f('ix_audit_machine_id'))

    op.drop_table('audit')
    op.drop_table('shared_user_machine')
    with op.batch_alter_table('data_transfer_job', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_data_transfer_job_state'))

    op.drop_table('data_transfer_job')
    op.drop_table('user_data_source')
    with op.batch_alter_table('machine', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_machine_state'))

    op.drop_table('machine')
    op.drop_table('user')
    op.drop_table('machine_template')
    op.drop_table('machine_provider')
    op.drop_table('group')
    with op.batch_alter_table('data_source', schema=None) as batch_op:
        batch_op.drop_index('source_host_source_dir_idx')

    op.drop_table('data_source')
    # ### end Alembic commands ###
